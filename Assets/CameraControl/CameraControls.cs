//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/CameraControl/CameraControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CameraControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CameraControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CameraControls"",
    ""maps"": [
        {
            ""name"": ""CameraControl"",
            ""id"": ""06f2969f-ea50-4258-81f8-9639d7af2988"",
            ""actions"": [
                {
                    ""name"": ""Zoom 1 finger"",
                    ""type"": ""Value"",
                    ""id"": ""14f7bd68-c059-4d80-bf97-957a63301b86"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom 2 finger"",
                    ""type"": ""Value"",
                    ""id"": ""361cf4ac-8994-481a-b179-db8524a57320"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom 2 finger press detection"",
                    ""type"": ""Button"",
                    ""id"": ""8db66474-0552-4cc3-92ee-9efcda96840e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pan "",
                    ""type"": ""Value"",
                    ""id"": ""03fa6837-3f40-4b1b-83dd-dd4262fd4dac"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pan press detection"",
                    ""type"": ""Button"",
                    ""id"": ""9ea698f7-a42e-42a2-9fc8-d8f50151e289"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6c581ff6-09a8-44a9-9329-644568abf531"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom 1 finger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17c09e9b-44f0-422a-8bf1-81cc3cc319d5"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom 2 finger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd852b24-fac1-4959-b8ee-e98546b71567"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom 2 finger press detection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eeeae9d2-8d45-4c70-a27e-8e3ef7e37b5c"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pan "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a9b6b11-c452-47ff-abd0-e392134e0af7"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pan press detection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CameraControl
        m_CameraControl = asset.FindActionMap("CameraControl", throwIfNotFound: true);
        m_CameraControl_Zoom1finger = m_CameraControl.FindAction("Zoom 1 finger", throwIfNotFound: true);
        m_CameraControl_Zoom2finger = m_CameraControl.FindAction("Zoom 2 finger", throwIfNotFound: true);
        m_CameraControl_Zoom2fingerpressdetection = m_CameraControl.FindAction("Zoom 2 finger press detection", throwIfNotFound: true);
        m_CameraControl_Pan = m_CameraControl.FindAction("Pan ", throwIfNotFound: true);
        m_CameraControl_Panpressdetection = m_CameraControl.FindAction("Pan press detection", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CameraControl
    private readonly InputActionMap m_CameraControl;
    private List<ICameraControlActions> m_CameraControlActionsCallbackInterfaces = new List<ICameraControlActions>();
    private readonly InputAction m_CameraControl_Zoom1finger;
    private readonly InputAction m_CameraControl_Zoom2finger;
    private readonly InputAction m_CameraControl_Zoom2fingerpressdetection;
    private readonly InputAction m_CameraControl_Pan;
    private readonly InputAction m_CameraControl_Panpressdetection;
    public struct CameraControlActions
    {
        private @CameraControls m_Wrapper;
        public CameraControlActions(@CameraControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Zoom1finger => m_Wrapper.m_CameraControl_Zoom1finger;
        public InputAction @Zoom2finger => m_Wrapper.m_CameraControl_Zoom2finger;
        public InputAction @Zoom2fingerpressdetection => m_Wrapper.m_CameraControl_Zoom2fingerpressdetection;
        public InputAction @Pan => m_Wrapper.m_CameraControl_Pan;
        public InputAction @Panpressdetection => m_Wrapper.m_CameraControl_Panpressdetection;
        public InputActionMap Get() { return m_Wrapper.m_CameraControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraControlActions set) { return set.Get(); }
        public void AddCallbacks(ICameraControlActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraControlActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraControlActionsCallbackInterfaces.Add(instance);
            @Zoom1finger.started += instance.OnZoom1finger;
            @Zoom1finger.performed += instance.OnZoom1finger;
            @Zoom1finger.canceled += instance.OnZoom1finger;
            @Zoom2finger.started += instance.OnZoom2finger;
            @Zoom2finger.performed += instance.OnZoom2finger;
            @Zoom2finger.canceled += instance.OnZoom2finger;
            @Zoom2fingerpressdetection.started += instance.OnZoom2fingerpressdetection;
            @Zoom2fingerpressdetection.performed += instance.OnZoom2fingerpressdetection;
            @Zoom2fingerpressdetection.canceled += instance.OnZoom2fingerpressdetection;
            @Pan.started += instance.OnPan;
            @Pan.performed += instance.OnPan;
            @Pan.canceled += instance.OnPan;
            @Panpressdetection.started += instance.OnPanpressdetection;
            @Panpressdetection.performed += instance.OnPanpressdetection;
            @Panpressdetection.canceled += instance.OnPanpressdetection;
        }

        private void UnregisterCallbacks(ICameraControlActions instance)
        {
            @Zoom1finger.started -= instance.OnZoom1finger;
            @Zoom1finger.performed -= instance.OnZoom1finger;
            @Zoom1finger.canceled -= instance.OnZoom1finger;
            @Zoom2finger.started -= instance.OnZoom2finger;
            @Zoom2finger.performed -= instance.OnZoom2finger;
            @Zoom2finger.canceled -= instance.OnZoom2finger;
            @Zoom2fingerpressdetection.started -= instance.OnZoom2fingerpressdetection;
            @Zoom2fingerpressdetection.performed -= instance.OnZoom2fingerpressdetection;
            @Zoom2fingerpressdetection.canceled -= instance.OnZoom2fingerpressdetection;
            @Pan.started -= instance.OnPan;
            @Pan.performed -= instance.OnPan;
            @Pan.canceled -= instance.OnPan;
            @Panpressdetection.started -= instance.OnPanpressdetection;
            @Panpressdetection.performed -= instance.OnPanpressdetection;
            @Panpressdetection.canceled -= instance.OnPanpressdetection;
        }

        public void RemoveCallbacks(ICameraControlActions instance)
        {
            if (m_Wrapper.m_CameraControlActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraControlActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraControlActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraControlActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraControlActions @CameraControl => new CameraControlActions(this);
    public interface ICameraControlActions
    {
        void OnZoom1finger(InputAction.CallbackContext context);
        void OnZoom2finger(InputAction.CallbackContext context);
        void OnZoom2fingerpressdetection(InputAction.CallbackContext context);
        void OnPan(InputAction.CallbackContext context);
        void OnPanpressdetection(InputAction.CallbackContext context);
    }
}
